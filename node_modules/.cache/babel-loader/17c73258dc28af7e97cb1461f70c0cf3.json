{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wijay\\\\OneDrive\\\\Desktop\\\\spootify\\\\src\\\\routes\\\\Discover\\\\components\\\\Discover.js\";\nimport React, { Component } from \"react\";\nimport DiscoverBlock from \"./DiscoverBlock/components/DiscoverBlock\";\nimport \"../styles/_discover.scss\";\nimport DiscoverService from \"../../../services/discover\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Discover extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: useSelectorctor(selectUser),\n      newReleases: [],\n      playlists: [],\n      categories: []\n    };\n  }\n\n  componentDidMount() {\n    this.getAPI();\n  }\n\n  getAPI() {\n    try {\n      Promise.allSettled([DiscoverService.getNewReleased(), DiscoverService.getFeaturedPlaylists(), DiscoverService.getCategories()]).then(_ref => {\n        let [newReleased, featuredPlaylists, category] = _ref;\n        console.log(newReleased);\n        this.setState({\n          newReleases: newReleased.value.albums.items,\n          playlists: featuredPlaylists.value.playlists.items,\n          categories: category.value.categories.items\n        });\n      });\n    } catch (error) {\n      this.setState({\n        hasError: true\n      });\n    }\n  }\n\n  newReleased() {\n    // this.props.setNewReleasedLoading();\n    DiscoverService.getNewReleased().then(result => {\n      // this.props.setNewReleasedSuccess(result);\n      this.setState({\n        newReleases: result.albums.items\n      });\n    }).catch(err => {\n      this.props.setNewReleasedError(err);\n    });\n  }\n\n  render() {\n    const {\n      newReleases,\n      playlists,\n      categories\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"discover\",\n      children: [/*#__PURE__*/_jsxDEV(DiscoverBlock, {\n        text: \"RELEASED THIS WEEK\",\n        id: \"released\",\n        data: newReleases\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiscoverBlock, {\n        text: \"FEATURED PLAYLISTS\",\n        id: \"featured\",\n        data: playlists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiscoverBlock, {\n        text: \"BROWSE\",\n        id: \"browse\",\n        data: categories,\n        imagesKey: \"icons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/wijay/OneDrive/Desktop/spootify/src/routes/Discover/components/Discover.js"],"names":["React","Component","DiscoverBlock","DiscoverService","useSelector","Discover","constructor","state","user","useSelectorctor","selectUser","newReleases","playlists","categories","componentDidMount","getAPI","Promise","allSettled","getNewReleased","getFeaturedPlaylists","getCategories","then","newReleased","featuredPlaylists","category","console","log","setState","value","albums","items","error","hasError","result","catch","err","props","setNewReleasedError","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAO,0BAAP;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAE9CK,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEC,eAAe,CAACC,UAAD,CADV;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,UAAU,EAAE;AAJD,KAAb;AAMD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,MAAL;AACD;;AACDA,EAAAA,MAAM,GAAG;AACP,QAAI;AACFC,MAAAA,OAAO,CAACC,UAAR,CAAmB,CACjBd,eAAe,CAACe,cAAhB,EADiB,EAEjBf,eAAe,CAACgB,oBAAhB,EAFiB,EAGjBhB,eAAe,CAACiB,aAAhB,EAHiB,CAAnB,EAIGC,IAJH,CAIQ,QAAgD;AAAA,YAA/C,CAACC,WAAD,EAAcC,iBAAd,EAAiCC,QAAjC,CAA+C;AACtDC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,aAAKK,QAAL,CAAc;AAEZhB,UAAAA,WAAW,EAAEW,WAAW,CAACM,KAAZ,CAAkBC,MAAlB,CAAyBC,KAF1B;AAGZlB,UAAAA,SAAS,EAAEW,iBAAiB,CAACK,KAAlB,CAAwBhB,SAAxB,CAAkCkB,KAHjC;AAIZjB,UAAAA,UAAU,EAAEW,QAAQ,CAACI,KAAT,CAAef,UAAf,CAA0BiB;AAJ1B,SAAd;AAMD,OAZD;AAaD,KAdD,CAcE,OAAOC,KAAP,EAAc;AACd,WAAKJ,QAAL,CAAc;AAAEK,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD;AACF;;AACDV,EAAAA,WAAW,GAAG;AACZ;AACAnB,IAAAA,eAAe,CAACe,cAAhB,GACGG,IADH,CACSY,MAAD,IAAY;AAChB;AACA,WAAKN,QAAL,CAAc;AAAEhB,QAAAA,WAAW,EAAEsB,MAAM,CAACJ,MAAP,CAAcC;AAA7B,OAAd;AACD,KAJH,EAKGI,KALH,CAKUC,GAAD,IAAS;AACd,WAAKC,KAAL,CAAWC,mBAAX,CAA+BF,GAA/B;AACD,KAPH;AAQD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE3B,MAAAA,WAAF;AAAeC,MAAAA,SAAf;AAA0BC,MAAAA;AAA1B,QAAyC,KAAKN,KAApD;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,IAAI,EAAC,oBADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,IAAI,EAAEI;AAHR;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,aAAD;AACE,QAAA,IAAI,EAAC,oBADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,IAAI,EAAEC;AAHR;AAAA;AAAA;AAAA;AAAA,cANF,eAWE,QAAC,aAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,EAAE,EAAC,QAFL;AAGE,QAAA,IAAI,EAAEC,UAHR;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AArE6C","sourcesContent":["import React, { Component } from \"react\";\nimport DiscoverBlock from \"./DiscoverBlock/components/DiscoverBlock\";\nimport \"../styles/_discover.scss\";\nimport DiscoverService from \"../../../services/discover\";\nimport { useSelector } from \"react-redux\";\n\nexport default class Discover extends Component {\n  \n  constructor() {\n    super();\n\n    this.state = {\n      user: useSelectorctor(selectUser),\n      newReleases: [],\n      playlists: [],\n      categories: [],\n    };\n  }\n  componentDidMount() {\n    this.getAPI();\n  }\n  getAPI() {\n    try {\n      Promise.allSettled([\n        DiscoverService.getNewReleased(),\n        DiscoverService.getFeaturedPlaylists(),\n        DiscoverService.getCategories(),\n      ]).then(([newReleased, featuredPlaylists, category]) => {\n        console.log(newReleased);\n        this.setState({\n          \n          newReleases: newReleased.value.albums.items,\n          playlists: featuredPlaylists.value.playlists.items,\n          categories: category.value.categories.items,\n        });\n      });\n    } catch (error) {\n      this.setState({ hasError: true });\n    }\n  }\n  newReleased() {\n    // this.props.setNewReleasedLoading();\n    DiscoverService.getNewReleased()\n      .then((result) => {\n        // this.props.setNewReleasedSuccess(result);\n        this.setState({ newReleases: result.albums.items });\n      })\n      .catch((err) => {\n        this.props.setNewReleasedError(err);\n      });\n  }\n\n  render() {\n    const { newReleases, playlists, categories } = this.state;\n\n    return (\n      <div className=\"discover\">\n        <DiscoverBlock\n          text=\"RELEASED THIS WEEK\"\n          id=\"released\"\n          data={newReleases}\n        />\n        <DiscoverBlock\n          text=\"FEATURED PLAYLISTS\"\n          id=\"featured\"\n          data={playlists}\n        />\n        <DiscoverBlock\n          text=\"BROWSE\"\n          id=\"browse\"\n          data={categories}\n          imagesKey=\"icons\"\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}