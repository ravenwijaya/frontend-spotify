{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wijay\\\\OneDrive\\\\Desktop\\\\spootify\\\\src\\\\routes\\\\Discover\\\\components\\\\Discover.js\";\nimport React, { Component } from \"react\";\nimport DiscoverBlock from \"./DiscoverBlock/components/DiscoverBlock\";\nimport \"../styles/_discover.scss\";\nimport DiscoverService from \"../../../services/discover\";\nimport ReactLoading from \"react-loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Discover extends Component {\n  constructor() {\n    super();\n    this.state = {\n      newReleases: [],\n      playlists: [],\n      categories: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.getAPI();\n  }\n\n  getAPI() {\n    try {\n      Promise.allSettled([DiscoverService.getNewReleased(), DiscoverService.getFeaturedPlaylists(), DiscoverService.getCategories()]).then(_ref => {\n        let [newReleased, featuredPlaylists, category] = _ref;\n        this.setState({\n          newReleases: newReleased.value.albums.items,\n          playlists: featuredPlaylists.value.playlists.items,\n          categories: category.value.categories.items,\n          loading: false\n        });\n      });\n    } catch (error) {\n      this.setState({\n        hasError: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      newReleases,\n      playlists,\n      categories,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"discover\",\n      children: !loading ? /*#__PURE__*/_jsxDEV(ReactLoading, {\n        color: \"#564FD8\",\n        type: \"spinningBubbles\",\n        height: \"20%\",\n        width: \"20%\",\n        className: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(DiscoverBlock, {\n          text: \"RELEASED THIS WEEK\",\n          id: \"released\",\n          data: newReleases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DiscoverBlock, {\n          text: \"FEATURED PLAYLISTS\",\n          id: \"featured\",\n          data: playlists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DiscoverBlock, {\n          text: \"BROWSE\",\n          id: \"browse\",\n          data: categories,\n          imagesKey: \"icons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/wijay/OneDrive/Desktop/spootify/src/routes/Discover/components/Discover.js"],"names":["React","Component","DiscoverBlock","DiscoverService","ReactLoading","Discover","constructor","state","newReleases","playlists","categories","loading","componentDidMount","getAPI","Promise","allSettled","getNewReleased","getFeaturedPlaylists","getCategories","then","newReleased","featuredPlaylists","category","setState","value","albums","items","error","hasError","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAO,0BAAP;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,YAAP,MAAyB,eAAzB;;;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC9CK,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,UAAU,EAAE,EAHD;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAMD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,MAAL;AACD;;AACDA,EAAAA,MAAM,GAAG;AACP,QAAI;AACFC,MAAAA,OAAO,CAACC,UAAR,CAAmB,CACjBZ,eAAe,CAACa,cAAhB,EADiB,EAEjBb,eAAe,CAACc,oBAAhB,EAFiB,EAGjBd,eAAe,CAACe,aAAhB,EAHiB,CAAnB,EAIGC,IAJH,CAIQ,QAAgD;AAAA,YAA/C,CAACC,WAAD,EAAcC,iBAAd,EAAiCC,QAAjC,CAA+C;AACtD,aAAKC,QAAL,CAAc;AACZf,UAAAA,WAAW,EAAEY,WAAW,CAACI,KAAZ,CAAkBC,MAAlB,CAAyBC,KAD1B;AAEZjB,UAAAA,SAAS,EAAEY,iBAAiB,CAACG,KAAlB,CAAwBf,SAAxB,CAAkCiB,KAFjC;AAGZhB,UAAAA,UAAU,EAAEY,QAAQ,CAACE,KAAT,CAAed,UAAf,CAA0BgB,KAH1B;AAIZf,UAAAA,OAAO,EAAE;AAJG,SAAd;AAMD,OAXD;AAYD,KAbD,CAaE,OAAOgB,KAAP,EAAc;AACd,WAAKJ,QAAL,CAAc;AAAEK,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA,WAAF;AAAeC,MAAAA,SAAf;AAA0BC,MAAAA,UAA1B;AAAsCC,MAAAA;AAAtC,QAAkD,KAAKJ,KAA7D;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACG,CAACI,OAAD,gBACC,QAAC,YAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,IAAI,EAAC,iBAFP;AAGE,QAAA,MAAM,EAAC,KAHT;AAIE,QAAA,KAAK,EAAC,KAJR;AAKE,QAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,cADD,gBASC;AAAA,mBACG,GADH,eAEE,QAAC,aAAD;AACE,UAAA,IAAI,EAAC,oBADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,IAAI,EAAEH;AAHR;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE,QAAC,aAAD;AACE,UAAA,IAAI,EAAC,oBADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,IAAI,EAAEC;AAHR;AAAA;AAAA;AAAA;AAAA,gBAPF,eAYE,QAAC,aAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,EAAE,EAAC,QAFL;AAGE,UAAA,IAAI,EAAEC,UAHR;AAIE,UAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AApE6C","sourcesContent":["import React, { Component } from \"react\";\nimport DiscoverBlock from \"./DiscoverBlock/components/DiscoverBlock\";\nimport \"../styles/_discover.scss\";\nimport DiscoverService from \"../../../services/discover\";\nimport ReactLoading from \"react-loading\";\n\nexport default class Discover extends Component {\n  constructor() {\n    super();\n    this.state = {\n      newReleases: [],\n      playlists: [],\n      categories: [],\n      loading: true,\n    };\n  }\n  componentDidMount() {\n    this.getAPI();\n  }\n  getAPI() {\n    try {\n      Promise.allSettled([\n        DiscoverService.getNewReleased(),\n        DiscoverService.getFeaturedPlaylists(),\n        DiscoverService.getCategories(),\n      ]).then(([newReleased, featuredPlaylists, category]) => {\n        this.setState({\n          newReleases: newReleased.value.albums.items,\n          playlists: featuredPlaylists.value.playlists.items,\n          categories: category.value.categories.items,\n          loading: false,\n        });\n      });\n    } catch (error) {\n      this.setState({ hasError: true });\n    }\n  }\n\n  render() {\n    const { newReleases, playlists, categories, loading } = this.state;\n\n    return (\n      <div className=\"discover\">\n        {!loading ? (\n          <ReactLoading\n            color=\"#564FD8\"\n            type=\"spinningBubbles\"\n            height=\"20%\"\n            width=\"20%\"\n            className=\"loading\"\n          />\n        ) : (\n          <>\n            {\" \"}\n            <DiscoverBlock\n              text=\"RELEASED THIS WEEK\"\n              id=\"released\"\n              data={newReleases}\n            />\n            <DiscoverBlock\n              text=\"FEATURED PLAYLISTS\"\n              id=\"featured\"\n              data={playlists}\n            />\n            <DiscoverBlock\n              text=\"BROWSE\"\n              id=\"browse\"\n              data={categories}\n              imagesKey=\"icons\"\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}