{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wijay\\\\OneDrive\\\\Desktop\\\\spootify\\\\src\\\\routes\\\\Discover\\\\components\\\\Discover.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport DiscoverBlock from \"./DiscoverBlock/components/DiscoverBlock\";\nimport \"../styles/_discover.scss\";\nimport DiscoverService from \"../../../services/discover\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Discover() {\n  _s();\n\n  const [data, setData] = useStatetate({\n    user: \"\",\n    newReleased: [],\n    playlists: [],\n    categories: []\n  });\n  useEffect(() => {\n    try {\n      Promise.allSettled([DiscoverService.getNewReleased(), DiscoverService.getFeaturedPlaylists(), DiscoverService.getCategories()]).then(_ref => {\n        let [newReleased, featuredPlaylists, category] = _ref;\n        console.log(newReleased);\n        this.setState({\n          newReleases: newReleased.value.albums.items,\n          playlists: featuredPlaylists.value.playlists.items,\n          categories: category.value.categories.items\n        });\n      });\n    } catch (error) {\n      this.setState({\n        hasError: true\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discover\",\n    children: [/*#__PURE__*/_jsxDEV(DiscoverBlock, {\n      text: \"RELEASED THIS WEEK\",\n      id: \"released\",\n      data: newReleases\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiscoverBlock, {\n      text: \"FEATURED PLAYLISTS\",\n      id: \"featured\",\n      data: playlists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiscoverBlock, {\n      text: \"BROWSE\",\n      id: \"browse\",\n      data: categories,\n      imagesKey: \"icons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Discover, \"Z/WeRYG2dPhhDSFTkrI3Hn4eNy0=\", true);\n\n_c = Discover;\nexport default Discover; // export default class Discover extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       user: \"\",\n//       newReleases: [],\n//       playlists: [],\n//       categories: [],\n//     };\n//   }\n//   componentDidMount() {\n//     this.getAPI();\n//   }\n//   getAPI() {\n//     console.log(this.user);\n//     try {\n//       Promise.allSettled([\n//         DiscoverService.getNewReleased(),\n//         DiscoverService.getFeaturedPlaylists(),\n//         DiscoverService.getCategories(),\n//       ]).then(([newReleased, featuredPlaylists, category]) => {\n//         console.log(newReleased);\n//         this.setState({\n//           newReleases: newReleased.value.albums.items,\n//           playlists: featuredPlaylists.value.playlists.items,\n//           categories: category.value.categories.items,\n//         });\n//       });\n//     } catch (error) {\n//       this.setState({ hasError: true });\n//     }\n//   }\n//   render() {\n//     const { newReleases, playlists, categories } = this.state;\n//     return (\n//       <div className=\"discover\">\n//         <DiscoverBlock\n//           text=\"RELEASED THIS WEEK\"\n//           id=\"released\"\n//           data={newReleases}\n//         />\n//         <DiscoverBlock\n//           text=\"FEATURED PLAYLISTS\"\n//           id=\"featured\"\n//           data={playlists}\n//         />\n//         <DiscoverBlock\n//           text=\"BROWSE\"\n//           id=\"browse\"\n//           data={categories}\n//           imagesKey=\"icons\"\n//         />\n//       </div>\n//     );\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Discover\");","map":{"version":3,"sources":["C:/Users/wijay/OneDrive/Desktop/spootify/src/routes/Discover/components/Discover.js"],"names":["React","Component","useEffect","useState","DiscoverBlock","DiscoverService","Discover","data","setData","useStatetate","user","newReleased","playlists","categories","Promise","allSettled","getNewReleased","getFeaturedPlaylists","getCategories","then","featuredPlaylists","category","console","log","setState","newReleases","value","albums","items","error","hasError"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAO,0BAAP;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,YAAY,CAAC;AACnCC,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,WAAW,EAAE,EAFsB;AAGnCC,IAAAA,SAAS,EAAE,EAHwB;AAInCC,IAAAA,UAAU,EAAE;AAJuB,GAAD,CAApC;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACFY,MAAAA,OAAO,CAACC,UAAR,CAAmB,CACjBV,eAAe,CAACW,cAAhB,EADiB,EAEjBX,eAAe,CAACY,oBAAhB,EAFiB,EAGjBZ,eAAe,CAACa,aAAhB,EAHiB,CAAnB,EAIGC,IAJH,CAIQ,QAAgD;AAAA,YAA/C,CAACR,WAAD,EAAcS,iBAAd,EAAiCC,QAAjC,CAA+C;AACtDC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AACA,aAAKa,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAEd,WAAW,CAACe,KAAZ,CAAkBC,MAAlB,CAAyBC,KAD1B;AAEZhB,UAAAA,SAAS,EAAEQ,iBAAiB,CAACM,KAAlB,CAAwBd,SAAxB,CAAkCgB,KAFjC;AAGZf,UAAAA,UAAU,EAAEQ,QAAQ,CAACK,KAAT,CAAeb,UAAf,CAA0Be;AAH1B,SAAd;AAKD,OAXD;AAYD,KAbD,CAaE,OAAOC,KAAP,EAAc;AACd,WAAKL,QAAL,CAAc;AAAEM,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD;AACF,GAjBQ,EAiBN,EAjBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,IAAI,EAAC,oBADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,IAAI,EAAEL;AAHR;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,oBAApB;AAAyC,MAAA,EAAE,EAAC,UAA5C;AAAuD,MAAA,IAAI,EAAEb;AAA7D;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,aAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAC,QAFL;AAGE,MAAA,IAAI,EAAEC,UAHR;AAIE,MAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAzCQP,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport DiscoverBlock from \"./DiscoverBlock/components/DiscoverBlock\";\nimport \"../styles/_discover.scss\";\nimport DiscoverService from \"../../../services/discover\";\n\nfunction Discover() {\n  const [data, setData] = useStatetate({\n    user: \"\",\n    newReleased: [],\n    playlists: [],\n    categories: [],\n  });\n  useEffect(() => {\n    try {\n      Promise.allSettled([\n        DiscoverService.getNewReleased(),\n        DiscoverService.getFeaturedPlaylists(),\n        DiscoverService.getCategories(),\n      ]).then(([newReleased, featuredPlaylists, category]) => {\n        console.log(newReleased);\n        this.setState({\n          newReleases: newReleased.value.albums.items,\n          playlists: featuredPlaylists.value.playlists.items,\n          categories: category.value.categories.items,\n        });\n      });\n    } catch (error) {\n      this.setState({ hasError: true });\n    }\n  }, []);\n  return (\n    <div className=\"discover\">\n      <DiscoverBlock\n        text=\"RELEASED THIS WEEK\"\n        id=\"released\"\n        data={newReleases}\n      />\n      <DiscoverBlock text=\"FEATURED PLAYLISTS\" id=\"featured\" data={playlists} />\n      <DiscoverBlock\n        text=\"BROWSE\"\n        id=\"browse\"\n        data={categories}\n        imagesKey=\"icons\"\n      />\n    </div>\n  );\n}\n\nexport default Discover;\n\n// export default class Discover extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       user: \"\",\n//       newReleases: [],\n//       playlists: [],\n//       categories: [],\n//     };\n//   }\n//   componentDidMount() {\n//     this.getAPI();\n//   }\n//   getAPI() {\n//     console.log(this.user);\n//     try {\n//       Promise.allSettled([\n//         DiscoverService.getNewReleased(),\n//         DiscoverService.getFeaturedPlaylists(),\n//         DiscoverService.getCategories(),\n//       ]).then(([newReleased, featuredPlaylists, category]) => {\n//         console.log(newReleased);\n//         this.setState({\n//           newReleases: newReleased.value.albums.items,\n//           playlists: featuredPlaylists.value.playlists.items,\n//           categories: category.value.categories.items,\n//         });\n//       });\n//     } catch (error) {\n//       this.setState({ hasError: true });\n//     }\n//   }\n\n//   render() {\n//     const { newReleases, playlists, categories } = this.state;\n\n//     return (\n//       <div className=\"discover\">\n//         <DiscoverBlock\n//           text=\"RELEASED THIS WEEK\"\n//           id=\"released\"\n//           data={newReleases}\n//         />\n//         <DiscoverBlock\n//           text=\"FEATURED PLAYLISTS\"\n//           id=\"featured\"\n//           data={playlists}\n//         />\n//         <DiscoverBlock\n//           text=\"BROWSE\"\n//           id=\"browse\"\n//           data={categories}\n//           imagesKey=\"icons\"\n//         />\n//       </div>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}