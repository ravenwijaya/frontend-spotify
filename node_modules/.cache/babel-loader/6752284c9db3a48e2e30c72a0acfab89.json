{"ast":null,"code":"import { useSelector } from \"react-redux\";\nimport { bati } from \"../utils/Axios\"; // const user = useSelector(selectUser);\n\nconst DiscoverService = {\n  // export const getAccessToken = async () => {\n  //          //   if (typeof document !== \"undefined\") {\n  //   //     console.log(accessToken);\n  //   //     document.cookie = `accessToken=${accessToken}; path=/`;\n  //   //   }\n  //     //   return accessToken ? accessToken : null;\n  //   };\n  async getToken() {\n    let auth = `${config.api.clientId}:${config.api.clientSecret}`;\n    let encodedAuth = btoa(auth);\n    const accessToken = await Axios({\n      method: \"post\",\n      url: \"https://accounts.spotify.com/api/token\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Basic ${encodedAuth}`\n      },\n      data: \"grant_type=client_credentials\"\n    }).then(res => {\n      return res.data;\n    }).catch(e => {\n      return e.response.data;\n    });\n    return data ? data : [];\n  },\n\n  async getNewReleased() {\n    const data = await bati.get(`/browse/new-releases`).then(res => res.data).catch(console.error);\n    return data ? data : [];\n  },\n\n  async getFeaturedPlaylists() {\n    const data = await bati.get(`/browse/featured-playlists`).then(res => res.data).catch(console.error);\n    return data ? data : [];\n  },\n\n  async getCategories() {\n    const data = await bati.get(`/browse/categories`).then(res => res.data).catch(console.error);\n    return data ? data : [];\n  }\n\n};\nexport default DiscoverService;","map":{"version":3,"sources":["C:/Users/wijay/OneDrive/Desktop/spootify/src/services/discover.js"],"names":["useSelector","bati","DiscoverService","getToken","auth","config","api","clientId","clientSecret","encodedAuth","btoa","accessToken","Axios","method","url","headers","Authorization","data","then","res","catch","e","response","getNewReleased","get","console","error","getFeaturedPlaylists","getCategories"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,gBAArB,C,CACA;;AACA,MAAMC,eAAe,GAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AAEF,QAAMC,QAAN,GAAiB;AACf,QAAIC,IAAI,GAAI,GAAEC,MAAM,CAACC,GAAP,CAAWC,QAAS,IAAGF,MAAM,CAACC,GAAP,CAAWE,YAAa,EAA7D;AACA,QAAIC,WAAW,GAAGC,IAAI,CAACN,IAAD,CAAtB;AAEA,UAAMO,WAAW,GAAG,MAAMC,KAAK,CAAC;AAC9BC,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,GAAG,EAAE,wCAFyB;AAG9BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,mCADT;AAEPC,QAAAA,aAAa,EAAG,SAAQP,WAAY;AAF7B,OAHqB;AAO9BQ,MAAAA,IAAI,EAAE;AAPwB,KAAD,CAAL,CASvBC,IATuB,CASjBC,GAAD,IAAS;AACb,aAAOA,GAAG,CAACF,IAAX;AACD,KAXuB,EAYvBG,KAZuB,CAYhBC,CAAD,IAAO;AACZ,aAAOA,CAAC,CAACC,QAAF,CAAWL,IAAlB;AACD,KAduB,CAA1B;AAeE,WAAOA,IAAI,GAAGA,IAAH,GAAU,EAArB;AACH,GA7BqB;;AA+BtB,QAAMM,cAAN,GAAuB;AACrB,UAAMN,IAAI,GAAG,MAAMhB,IAAI,CACpBuB,GADgB,CACX,sBADW,EAEhBN,IAFgB,CAEVC,GAAD,IAASA,GAAG,CAACF,IAFF,EAGhBG,KAHgB,CAGVK,OAAO,CAACC,KAHE,CAAnB;AAIA,WAAOT,IAAI,GAAGA,IAAH,GAAU,EAArB;AACD,GArCqB;;AAuCtB,QAAMU,oBAAN,GAA6B;AAC3B,UAAMV,IAAI,GAAG,MAAMhB,IAAI,CACpBuB,GADgB,CACX,4BADW,EAEhBN,IAFgB,CAEVC,GAAD,IAASA,GAAG,CAACF,IAFF,EAGhBG,KAHgB,CAGVK,OAAO,CAACC,KAHE,CAAnB;AAIA,WAAOT,IAAI,GAAGA,IAAH,GAAU,EAArB;AACD,GA7CqB;;AA+CtB,QAAMW,aAAN,GAAsB;AACpB,UAAMX,IAAI,GAAG,MAAMhB,IAAI,CACpBuB,GADgB,CACX,oBADW,EAEhBN,IAFgB,CAEVC,GAAD,IAASA,GAAG,CAACF,IAFF,EAGhBG,KAHgB,CAGVK,OAAO,CAACC,KAHE,CAAnB;AAIA,WAAOT,IAAI,GAAGA,IAAH,GAAU,EAArB;AACD;;AArDqB,CAAxB;AAwDA,eAAef,eAAf","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { bati } from \"../utils/Axios\";\r\n// const user = useSelector(selectUser);\r\nconst DiscoverService = {\r\n    // export const getAccessToken = async () => {\r\n    //          //   if (typeof document !== \"undefined\") {\r\n    //   //     console.log(accessToken);\r\n    //   //     document.cookie = `accessToken=${accessToken}; path=/`;\r\n    //   //   }\r\n    //     //   return accessToken ? accessToken : null;\r\n    //   };\r\n\r\n  async getToken() {\r\n    let auth = `${config.api.clientId}:${config.api.clientSecret}`;\r\n    let encodedAuth = btoa(auth);\r\n\r\n    const accessToken = await Axios({\r\n      method: \"post\",\r\n      url: \"https://accounts.spotify.com/api/token\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Basic ${encodedAuth}`,\r\n      },\r\n      data: \"grant_type=client_credentials\",\r\n    })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .catch((e) => {\r\n        return e.response.data;\r\n      });\r\n      return data ? data : [];\r\n  },\r\n  \r\n  async getNewReleased() {\r\n    const data = await bati\r\n      .get(`/browse/new-releases`)\r\n      .then((res) => res.data)\r\n      .catch(console.error);\r\n    return data ? data : [];\r\n  },\r\n\r\n  async getFeaturedPlaylists() {\r\n    const data = await bati\r\n      .get(`/browse/featured-playlists`)\r\n      .then((res) => res.data)\r\n      .catch(console.error);\r\n    return data ? data : [];\r\n  },\r\n\r\n  async getCategories() {\r\n    const data = await bati\r\n      .get(`/browse/categories`)\r\n      .then((res) => res.data)\r\n      .catch(console.error);\r\n    return data ? data : [];\r\n  },\r\n\r\n};\r\nexport default DiscoverService;"]},"metadata":{},"sourceType":"module"}